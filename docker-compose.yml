version: '3.8'

services:
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      # Mount the source code for hot-reloading during development
      - .:/app
    env_file:
      - .env
    environment:
      # Ensure the API service always uses the 'distributed' backend in Docker Compose
      - EXECUTION_BACKEND=distributed
    depends_on:
      - redis
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    # Override the default command to run the worker script
    command: ["python", "worker.py"]
    volumes:
      # Mount the source code to ensure the worker has the latest code
      - .:/app
    env_file:
      - .env
    environment:
      # Example: specify which model this worker should handle
      # You can scale this by creating more worker services with different model IDs
      - WORKER_MODEL_ID=distil_large_v3_ptbr
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  redis_data:
